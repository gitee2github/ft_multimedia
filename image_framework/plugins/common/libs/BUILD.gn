# Copyright (C) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/image_framework/ide/image_decode_config.gni")

group("multimediaplugin") {
  if (use_mingw_win || use_clang_mac) {
    deps = [
      "image/formatagentplugin:formatagentmetadata",
      "image/formatagentplugin:imageformatagent",
      "image/libgifplugin:gifplugin",
      "image/libgifplugin:gifpluginmetadata",
      "image/libjpegplugin:jpegplugin",
      "image/libjpegplugin:jpegpluginmetadata",
      "image/libpngplugin:pngplugin",
      "image/libpngplugin:pngpluginmetadata",
      "image/librawplugin:rawplugin",
      "image/librawplugin:rawpluginmetadata",
      "//foundation/multimedia/image_framework/adapter/frameworks/libbmpplugin:bmpplugin",
      "//foundation/multimedia/image_framework/adapter/frameworks/libbmpplugin:bmppluginmetadata",
      "//foundation/multimedia/image_framework/adapter/frameworks/libwbmpplugin:wbmpplugin",
      "//foundation/multimedia/image_framework/adapter/frameworks/libwbmpplugin:wbmppluginmetadata",
    ]
  } else {
    DUAL_ADAPTER = true
    deps = [
      "image/formatagentplugin:formatagentmetadata",
      "image/formatagentplugin:imageformatagent",
      "image/libgifplugin:gifplugin",
      "image/libgifplugin:gifpluginmetadata",

      #      "image/libheifplugin:heifplugin",
      #      "image/libheifplugin:heifpluginmetadata",
      "image/libbmpplugin:bmpplugin",
      "image/libbmpplugin:bmppluginmetadata",
      "image/libjpegplugin:jpegplugin",
      "image/libjpegplugin:jpegpluginmetadata",
      "image/libpngplugin:pngplugin",
      "image/libpngplugin:pngpluginmetadata",
      "image/librawplugin:rawplugin",
      "image/librawplugin:rawpluginmetadata",
      "image/libwebpplugin:webpplugin",
      "image/libwebpplugin:webppluginmetadata",

      #      "//foundation/multimedia/image_framework/adapter/frameworks/libhwjpegplugin:hwjpegplugin",
      #      "//foundation/multimedia/image_framework/adapter/frameworks/libhwjpegplugin:hwjpegpluginmetadata",
    ]
    if (DUAL_ADAPTER) {
      deps += [
        #        "//foundation/multimedia/image_framework/adapter/frameworks/libbmpplugin:bmpplugin",
        #        "//foundation/multimedia/image_framework/adapter/frameworks/libbmpplugin:bmppluginmetadata",
        #        "//foundation/multimedia/image_framework/adapter/frameworks/librawplugin:rawplugin",
        #        "//foundation/multimedia/image_framework/adapter/frameworks/librawplugin:rawpluginmetadata",
        #        "//foundation/multimedia/image_framework/adapter/frameworks/libwbmpplugin:wbmpplugin",
        #        "//foundation/multimedia/image_framework/adapter/frameworks/libwbmpplugin:wbmppluginmetadata",
      ]
    }
  }
}
