# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/multimedia/image_framework/ide/image_decode_config.gni")

ohos_shared_library("rawplugin") {
  if (!use_clang_android && !use_clang_ios) {
    sanitize = {
      cfi = true
      debug = false
    }
  }
  sources = [
    "//foundation/multimedia/image_framework/plugins/common/libs/image/librawplugin/src/plugin_export.cpp",
    "//foundation/multimedia/image_framework/plugins/common/libs/image/librawplugin/src/raw_decoder.cpp",
    "//foundation/multimedia/image_framework/plugins/common/libs/image/librawplugin/src/raw_stream.cpp",
  ]

  cflags = [
    "-DIMAGE_DEBUG_FLAG",
    "-DIMAGE_COLORSPACE_FLAG",
  ]

  include_dirs = [
    "//foundation/graphic/graphic_2d/utils/color_manager/export",
    "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/stream/include",
    "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/utils/include",
    "//foundation/multimedia/image_framework/interfaces/innerkits/include",
    "//foundation/multimedia/image_framework/plugins/common/libs/image/libjpegplugin/include",
    "//foundation/multimedia/image_framework/plugins/common/libs/image/librawplugin/include",
    "//foundation/multimedia/image_framework/plugins/manager/include",
    "//foundation/multimedia/image_framework/plugins/manager/include/image",
    "//foundation/multimedia/image_framework/plugins/manager/include/pluginbase",
    "//third_party/libexif",
    "//third_party/skia",
    "//third_party/skia/third_party/externals/libjpeg-turbo",
  ]

  if (use_mingw_win) {
    defines = image_decode_windows_defines
    include_dirs +=
        [ "//foundation/multimedia/image_framework/mock/native/include" ]
    deps = [
      "//foundation/multimedia/image_framework/mock/native:log_mock_static",
      "//foundation/multimedia/image_framework/plugins/manager:pluginmanager_static",
    ]

    libs = [ "//prebuilts/mingw-w64/ohos/linux-x86_64/clang-mingw/x86_64-w64-mingw32/lib/libws2_32.a" ]
  } else if (use_clang_android) {
    defines = image_decode_android_defines
    include_dirs +=
        [ "//foundation/multimedia/image_framework/mock/native/include" ]

    cflags -= [ "-DIMAGE_COLORSPACE_FLAG" ]

    deps = [
      "//foundation/multimedia/image_framework/interfaces/innerkits:image_native",
      "//foundation/multimedia/image_framework/mock/native:log_mock_static",
      "//foundation/multimedia/image_framework/plugins/common/libs/image/libjpegplugin:jpegplugin",
      "//foundation/multimedia/image_framework/plugins/manager:pluginmanager",
      "//third_party/skia/third_party/piex",
    ]
  } else if (use_clang_ios) {
    defines = image_decode_ios_defines
    include_dirs +=
        [ "//foundation/multimedia/image_framework/mock/native/include" ]

    cflags -= [ "-DIMAGE_COLORSPACE_FLAG" ]

    deps = [
      "//foundation/multimedia/image_framework/interfaces/innerkits:image_native",
      "//foundation/multimedia/image_framework/mock/native:log_mock_static",
      "//foundation/multimedia/image_framework/plugins/common/libs/image/libjpegplugin:jpegplugin",
      "//foundation/multimedia/image_framework/plugins/manager:pluginmanager",
      "//third_party/skia/third_party/piex",
    ]
  } else {
    defines = [ "DUAL_ADAPTER" ]
    DUAL_ADAPTER = true
    deps = [
      "//foundation/multimedia/image_framework/interfaces/innerkits:image_native",
      "//foundation/multimedia/image_framework/plugins/common/libs/image/libjpegplugin:jpegplugin",
      "//foundation/multimedia/image_framework/plugins/manager:pluginmanager",
      "//third_party/skia/third_party/piex",
    ]

    if (DUAL_ADAPTER) {
    }

    external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
  }

  part_name = "multimedia_image_framework"
  subsystem_name = "multimedia"
}

ohos_prebuilt_etc("rawpluginmetadata") {
  source = "rawplugin.pluginmeta"
  relative_install_dir = "multimediaplugin/image"
  subsystem_name = "multimedia"
  part_name = "multimedia_image_framework"
}
